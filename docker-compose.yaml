version: "3.7"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d/
  api:
    image: ghcr.io/thanakise/api_kafka_sarama:1.0
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kafka
    restart: always
    environment:
      - BROKER=${BROKER}
      - PRODUCER_PORT=${PRODUCER_PORT}
      - DATABASE_URL=${DATABASE_URL}

  consumer:
    image: ghcr.io/thanakise/consumer:1.0
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      BROKER: kafka:9092
      DATABASE_URL: ${DATABASE_URL}
      TOPICS: ${TOPICS}
